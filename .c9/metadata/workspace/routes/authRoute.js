{"changed":true,"filter":false,"title":"authRoute.js","tooltip":"/routes/authRoute.js","value":"\"use strict\";\nvar User = require('../models/User'),\n\tjwt = require('jsonwebtoken'),\n\t\n\tconfigRoute;\n\nconfigRoute = function (app){\n\tapp.post('/signin', function(req, res) {\n\t    User.findOne({email: req.body.email, password: req.body.password}, function(err, user) {\n\t        if (err) {\n\t            res.json({\n\t                type: false,\n\t                data: \"Error occured: \" + err\n\t            });\n\t        } else {\n\t            if (user) {\n\t               res.json({\n\t                    type: true,\n\t                    data: user,\n\t                }); \n\t            } else {\n\t                res.json({\n\t                    type: false,\n\t                    data: \"Incorrect email/password\"\n\t                });    \n\t            }\n\t        }\n\t    });\n\t});\n\n\tapp.post('/signup', function(req, res) {\n\t    User.findOne({email: req.body.email, password: req.body.password}, function(err, user) {\n\t        if (err) {\n\t            res.json({\n\t                type: false,\n\t                data: \"Error occured: \" + err\n\t            });\n\t        } else {\n\t            if (user) {\n\t                res.json({\n\t                    type: false,\n\t                    data: \"User already exists!\"\n\t                });\n\t            } else {\n\t                var userModel = new User();\n\t\t                userModel.email = req.body.email;\n\t\t                userModel.password = req.body.password;\n\t                userModel.save(function(err, user) {\n\t                    user.token = jwt.sign(user, 'secret1');\n\t                    user.save(function(err, user1) {\n\t                        res.json({\n\t                            type: true,\n\t                            data: user1\n\t                        });\n\t                    });\n\t                })\n\t            }\n\t        }\n\t    });\n\t});\n\n\tapp.get('/test', ensureAuthorized, function(req, res) {\n\t    User.findOne({token: req.token}, function(err, user) {\n\t        if (err) {\n\t            res.json({\n\t                type: false,\n\t                data: \"Error occured: \" + err\n\t            });\n\t        } else {\n\t            res.json({\n\t                type: true,\n\t                data: user\n\t            });\n\t        }\n\t    });\n\t});\n\n\tfunction ensureAuthorized(req, res, next) {\n\t    var bearerToken;\n\t    var bearerHeader = req.headers[\"authorization\"];\n\t    if (typeof bearerHeader !== 'undefined') {\n\t        var bearer = bearerHeader.split(\" \");\n\t        bearerToken = bearer[1];\n\t        req.token = bearerToken;\n\t        next();\n\t    } else {\n\t        res.send(403);\n\t    }\n\t}\n}\n\nmodule.exports = {\n\tconfigRoute : configRoute\n}","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":45,"column":0},"end":{"row":45,"column":1},"action":"insert","lines":["\t"],"id":1},{"start":{"row":46,"column":0},"end":{"row":46,"column":1},"action":"insert","lines":["\t"]}]]},"ace":{"folds":[],"scrolltop":600,"scrollleft":0,"selection":{"start":{"row":81,"column":46},"end":{"row":81,"column":46},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1429286822000}